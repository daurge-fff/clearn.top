<div class="container">
    <link rel="stylesheet" href="/css/dashboard.css?v=1.8">
    <script src="/js/global.js?v=2.1"></script>
    <div class="page-header">
        <h1>Welcome, <%= user.name.split(' ')[0] %>!</h1>
    </div>

    <div class="stats-grid">
        <% if (user.role === 'student') { %>
              <div class="stat-card">
                  <div class="stat-icon" style="--icon-bg: rgba(255, 215, 0, 0.2); --icon-color: #FFD700;"><i class="icon-star"></i></div>
                  <div class="stat-info">
                      <span class="stat-label">My Stars</span>
                      <span class="stat-number"><%= user.stars || 0 %></span>
                  </div>
              </div>
              <div class="stat-card">
                  <div class="stat-icon" style="--icon-bg: rgba(231, 76, 60, 0.2); --icon-color: #e74c3c;"><i class="icon-credit-card"></i></div>
                  <div class="stat-info">
                      <span class="stat-label">Paid Lessons</span>
                      <span class="stat-number"><%= user.lessonsPaid %></span>
                  </div>
              </div>
            <div class="stat-card">
                <div class="stat-icon" style="--icon-bg: rgba(196, 58, 214, 0.2); --icon-color: var(--accent-color-2);"><i class="icon-calendar"></i></div>
                <div class="stat-info">
                    <span class="stat-label">Next Lesson</span>
                    <% if (stats.upcomingLesson) { %>
                        <span class="stat-number small"><%= new Date(stats.upcomingLesson.localLessonDate).toLocaleDateString('en-GB', { month: 'short', day: 'numeric' }) %></span>
                    <% } else { %>
                        <span class="stat-number small">No lessons scheduled</span>
                    <% } %>
                </div>
            </div>
        <% } %>

        <% if (user.role === 'teacher') { %>
            <div class="stat-card">
                <div class="stat-icon" style="--icon-bg: rgba(46, 204, 113, 0.2); --icon-color: #2ecc71;"><i class="icon-calendar"></i></div>
                <div class="stat-info">
                    <span class="stat-label">Lessons This Week</span>
                    <span class="stat-number"><%= stats.lessonsThisWeek %></span>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon" style="--icon-bg: rgba(52, 152, 219, 0.2); --icon-color: #3498db;"><i class="icon-users"></i></div>
                <div class="stat-info">
                    <span class="stat-label">Active Students</span>
                    <span class="stat-number"><%= stats.studentCount %></span>
                </div>
            </div>
        <% } %>

        <% if (user.role === 'admin') { %>
             <div class="stat-card">
                <div class="stat-icon" style="--icon-bg: rgba(52, 152, 219, 0.2); --icon-color: #3498db;"><i class="icon-users"></i></div>
                <div class="stat-info">
                    <span class="stat-label">Total Students</span>
                    <span class="stat-number"><%= stats.studentCount %></span>
                </div>
            </div>
             <div class="stat-card">
                <div class="stat-icon" style="--icon-bg: rgba(155, 89, 182, 0.2); --icon-color: #9b59b6;"><i class="icon-briefcase"></i></div>
                <div class="stat-info">
                    <span class="stat-label">Total Teachers</span>
                    <span class="stat-number"><%= stats.teacherCount %></span>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon" style="--icon-bg: rgba(46, 204, 113, 0.2); --icon-color: #2ecc71;"><i class="icon-list"></i></div>
                <div class="stat-info">
                    <span class="stat-label">Upcoming Lessons</span>
                    <span class="stat-number"><%= stats.lessonsScheduled %></span>
                </div>
            </div>
        <% } %>
    </div>
    
    <div class="card calendar-card">
        <div id="calendar" style="min-height: 500px;"></div>
    </div>
    <div id="events-list"></div> 
</div>

<script>
document.addEventListener('DOMContentLoaded', async function() {
    const calendarEl = document.getElementById('calendar');
    const eventsListEl = document.getElementById('events-list');
    let allEvents = [];
    let selectedDateEl = null;

    try {
        const response = await fetch('/api/lessons');
        if (!response.ok) throw new Error('Failed to fetch lessons');
        allEvents = await response.json();
    } catch (error) {
        console.error(error);
        if(calendarEl) calendarEl.innerHTML = '<p>Could not load schedule.</p>';
        return;
    }

    function getLocalDateString(date) {
        const d = new Date(date);
        const year = d.getFullYear();
        const month = ('0' + (d.getMonth() + 1)).slice(-2);
        const day = ('0' + d.getDate()).slice(-2);
        return `${year}-${month}-${day}`;
    }

    function renderEventsForDate(dateStr) {
        const eventsForDay = allEvents.filter(event => getLocalDateString(event.start) === dateStr);
        
        if (eventsForDay.length === 0) {
            eventsListEl.innerHTML = '<div class="empty-state" style="padding: 20px; margin-top: 20px;"><div class="empty-state-icon"><i class="icon-inbox"></i></div><h3>No lessons on this day</h3></div>';
            return;
        }

        eventsListEl.innerHTML = `<div class="day-events-list">` + eventsForDay.map(event => {
            const statusClass = event.status || 'scheduled';
            const studentName = event.student.name || 'N/A';
            const studentInitial = studentName.charAt(0) || '?';
            const studentAvatar = event.student.emojiAvatar;
            const courseName = event.course.name || 'General';
            const topic = event.topic || 'Lesson';

            return `
            <div class="day-event-card">
                <div class="event-card-header">
                    <span class="event-time">${new Date(event.start).toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' })}</span>
                    <span class="badge status-${statusClass}">${statusClass.replace(/_/g, ' ')}</span>
                </div>
                <div class="event-card-body">
                    <div class="user-avatar" style="width: 40px; height: 40px;">
                        ${studentAvatar ? `<img src="https://emojicdn.elk.sh/${encodeURIComponent(studentAvatar)}?style=apple" alt="Avatar" class="emoji-avatar-img">` : `<span>${studentInitial}</span>`}
                    </div>
                    <div class="event-info">
                        <div class="event-student-name">${studentName}</div>
                        <div class="event-course-name">${courseName}: ${topic}</div>
                    </div>
                </div>
                <div class="event-card-actions">
                    ${event.url ? `<a href="${event.url}" class="btn btn-primary">Manage Lesson</a>` : ''}
                </div>
            </div>
            `;
        }).join('') + `</div>`;
    }

    const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        headerToolbar: false,
        dayCellDidMount: function(arg) {
            const dateStr = getLocalDateString(arg.date);
            const eventsOnDay = allEvents.filter(event => getLocalDateString(event.start) === dateStr);
            
            if (eventsOnDay.length > 0) {
                let cellClass = '';
                // Логика приоритетов: scheduled > cancelled > completed
                if (eventsOnDay.some(e => e.status === 'scheduled')) {
                    cellClass = 'fc-day-has-scheduled';
                } else if (eventsOnDay.some(e => e.status.startsWith('cancelled') || e.status === 'no_show')) {
                    cellClass = 'fc-day-has-cancelled';
                } else if (eventsOnDay.every(e => e.status === 'completed')) {
                    cellClass = 'fc-day-has-completed';
                }
                
                if (cellClass) {
                    arg.el.classList.add(cellClass);
                }
            }
        },
        dateClick: function(info) {
            if (selectedDateEl) {
                selectedDateEl.classList.remove('day-selected');
            }
            info.dayEl.classList.add('day-selected');
            selectedDateEl = info.dayEl;
            renderEventsForDate(info.dateStr);
        }
    });

    const navContainer = document.createElement('div');
    navContainer.id = 'calendar-nav';
    navContainer.innerHTML = `
        <button id="cal-prev" title="Previous month"><i class="icon-prev"></i></button>
        <h2 id="calendar-title"></h2>
        <button id="cal-next" title="Next month"><i class="icon-next"></i></button>
    `;
    calendarEl.parentNode.insertBefore(navContainer, calendarEl);
    
    const titleEl = document.getElementById('calendar-title');
    
    function updateTitle() {
        titleEl.innerText = calendar.view.title;
    }

    document.getElementById('cal-prev').addEventListener('click', () => { calendar.prev(); updateTitle(); });
    document.getElementById('cal-next').addEventListener('click', () => { calendar.next(); updateTitle(); });
    
    calendar.render();
    updateTitle();

    const todayStr = getLocalDateString(new Date());
    const todayEl = document.querySelector(`.fc-day[data-date="${todayStr}"]`);
    if (todayEl) {
        todayEl.classList.add('day-selected');
        selectedDateEl = todayEl;
    }
    renderEventsForDate(todayStr);
});
</script>