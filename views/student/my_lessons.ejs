<div class="container">
<div class="page-header">
    <h1>My Lessons</h1>
</div>

<div class="stats-grid">
    <div class="stat-card">
        <h3>Total Lessons</h3>
        <p class="stat-number"><%= user.lessonsPaid || 0 %></p>
        <span class="stat-desc">Remaining lessons on your balance</span>
    </div>
</div>
<div class="card">
    <h2>My Payments</h2>
    <% if (payments && payments.length > 0) { %>
        <div class="table-responsive">
            <table class="data-table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Description</th>
                        <th>Amount</th>
                        <th>Lessons Credited</th>
                    </tr>
                </thead>
                <tbody>
                    <% payments.forEach(payment => { %>
                        <tr>
                            <td><%= new Date(payment.createdAt).toLocaleDateString('en-GB') %></td>
                            <td>Payment via <%= payment.paymentSystem %></td>
                            <td><%= payment.amountPaid.toFixed(2) %> <%= payment.currency %></td>
                            <td><span class="badge status-completed">+<%= payment.lessonsPurchased %></span></td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    <% } else { %>
        <div class="empty-state" style="padding: 20px;">
            <p>You have no payment history yet.</p>
        </div>
    <% } %>
</div>

<div class="card">
    <h2>All Lessons List</h2>
    <% if (lessons && lessons.length > 0) { %>
        <div class="table-responsive">
            <table class="data-table">
                <thead>
                    <tr>
                        <th>Course</th>
                        <th>Teacher</th>
                        <th>Date & Time</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% lessons.forEach(lesson => { %>
                        <tr>
                            <td>
                                <a href="/dashboard/lessons/view/<%= lesson._id %>" class="link-discreet">
                                    <% if (lesson.isProject) { %>
                                        <i class="icon-star" style="width: 1em; height: 1em; vertical-align: -0.125em; margin-right: 5px; color: #ffb92b;"></i>
                                    <% } %>
                                    <% if (lesson.lessonNumber) { %>
                                        <span style="color: #666; font-size: 0.9em; margin-right: 8px;">#<%= lesson.lessonNumber %></span>
                                    <% } %>
                                    <%= lesson.course.name %>
                                </a>
                            </td>
                            <td><%= lesson.teacher.name %></td>
                            <td><%= new Date(lesson.localLessonDate).toLocaleString('en-GB', { day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit' }) %></td>
                            <td><span class="badge status-<%= lesson.status %>"><%= lesson.status.replace(/_/g, ' ') %></span></td>
                            <td class="actions-cell">
                                <% if (lesson.status === 'scheduled') { %>
                                    <form action="/dashboard/lessons/cancel/<%= lesson._id %>" method="POST" class="cancel-lesson-form">
                                        <button type="submit" class="btn-icon btn-danger" data-tooltip="Cancel Lesson">
                                            <i class="icon-delete"></i>
                                        </button>
                                        <input type="hidden" name="reason" value="">
                                    </form>
                                <% } else { %>
                                    
                                <% } %>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    <% } else { %>
        <div class="empty-state">
            <div class="empty-state-icon"><i class="icon-inbox"></i></div>
            <h3>No Lessons Found</h3>
            <p>You don't have any scheduled or past lessons. Please contact your teacher or administrator.</p>
        </div>
    <% } %>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    var calendarEl = document.getElementById('calendar');
    var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: window.innerWidth < 768 ? 'listWeek' : 'dayGridMonth',
        windowResize: function(arg) {
            if (arg.view.type === 'dayGridMonth' && window.innerWidth < 768) {
                calendar.changeView('listWeek');
            } else if (arg.view.type === 'listWeek' && window.innerWidth >= 768) {
                calendar.changeView('dayGridMonth');
            }
        },
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,listWeek'
        },
        events: '/api/lessons',
        allDaySlot: false,
        editable: false,
        selectable: false,
        dayMaxEvents: true, 
        eventTimeFormat: { hour: 'numeric', minute: '2-digit', hour12: false },
        eventDidMount: function(info) {
            // Apply correct colors based on lesson status
            applyEventColors(info);
        },
        datesSet: function(dateInfo) {
            // Reapply colors when month changes
            setTimeout(function() {
                calendar.getEvents().forEach(function(event) {
                    const eventEl = event.el;
                    if (eventEl) {
                        applyEventColors({ event: event, el: eventEl });
                    }
                });
            }, 100);
        },
        eventClick: function(info) {
            if (info.event.url) {
                window.location = info.event.url;
                info.jsEvent.preventDefault();
            }
        }
    });
    calendar.render();
    
    // Function to apply event colors
    function applyEventColors(info) {
        const status = info.event.extendedProps.status;
        if (status === 'completed') {
            info.el.style.backgroundColor = '#2ecc71';
            info.el.style.borderColor = '#2ecc71';
            info.el.style.color = '#ffffff';
        } else if (status && status.startsWith('cancelled')) {
            info.el.style.backgroundColor = '#e74c3c';
            info.el.style.borderColor = '#e74c3c';
            info.el.style.color = '#ffffff';
        } else {
            info.el.style.backgroundColor = '#3498db';
            info.el.style.borderColor = '#3498db';
            info.el.style.color = '#ffffff';
        }
    }
});
</script>

<script>
function handleCancellation(form) {
    const reason = prompt("Please enter the reason for cancellation (required):");
    if (reason && reason.trim() !== "") {
        form.querySelector('input[name="reason"]').value = reason;
        return confirm('Are you sure you want to cancel this lesson?');
    } else if (reason !== null) {
        alert("Cancellation reason is required.");
    }
    return false;
}
</script>