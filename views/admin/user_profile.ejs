<div class="container profile-page-container" data-user-id="<%= userProfile._id %>">
    <div class="page-header profile-header">
        <div class="profile-info-block">
            <div class="user-avatar header-avatar">
                <% if (userProfile.emojiAvatar) { %>
                    <img src="https://emojicdn.elk.sh/<%= encodeURIComponent(userProfile.emojiAvatar) %>?style=apple" alt="Avatar" class="emoji-avatar-img">
                <% } else { %>
                    <span><%= userProfile.name.charAt(0) %></span>
                <% } %>
            </div>
            <div class="header-title-block">
                <h1><%= userProfile.name %></h1>
                <p class="section-subtitle">User Profile (<%= userProfile.role %>)</p>
            </div>
        </div>

        <div class="page-actions">
            <a href="/dashboard/users/edit/<%= userProfile._id %>" class="btn btn-secondary"><i class="icon-edit"></i> Edit User</a>
            <a href="/dashboard/users" class="btn btn-secondary">Back to All Users</a>
        </div>
    </div>

    <div class="card">
        <div class="page-actions" style="padding: 0; flex-wrap: wrap; gap: 10px;">
            <% if (userProfile.role === 'student') { %>
                <a href="#" id="schedule-lesson-btn" class="btn btn-primary" data-student-id="<%= userProfile._id %>">
                    <i class="icon-add"></i> Schedule Lesson
                </a>
                <button id="adjust-balance-btn" class="btn btn-secondary"><i class="icon-edit"></i> Adjust Balance</button>
            <% } %>
            <button id="reset-password-btn" class="btn btn-secondary"><i class="icon-key"></i> Send Password Reset</button>
        </div>
    </div>

    <div class="stats-grid">
        <% if (userProfile.role === 'student') { %>
            <div class="stat-card">
                <div class="stat-info">
                    <span class="stat-number"><%= userProfile.stars %></span>
                    <span class="stat-label">Stars Balance</span>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-info">
                    <span class="stat-number"><%= userProfile.lessonsPaid %></span>
                    <span class="stat-label">Paid Lessons</span>
                </div>
            </div>
        <% } %>
        <div class="stat-card email-card">
            <div class="stat-info">
                <span class="stat-number small"><%= userProfile.email %></span>
                <span class="stat-label">Email</span>
            </div>
        </div>
    </div>
    
    <% if (userProfile.role === 'student') { %>
        <div class="card">
            <h2>Adjust Balance</h2>
            <div class="tabs">
                <button class="tab-link active" data-tab="stars">Stars</button>
                <button class="tab-link" data-tab="lessons">Paid Lessons</button>
            </div>

            <div id="stars" class="tab-content active">
                <form action="/dashboard/user-profile/<%= userProfile._id %>/adjust-stars" method="POST" class="adjustment-form">
                    <div class="form-group">
                        <label for="starsAdjustment">Stars Adjustment</label>
                        <input type="number" id="starsAdjustment" name="starsAdjustment" placeholder="e.g., 10 or -5" required>
                    </div>
                    <div class="form-group reason-group">
                        <label for="starsAdjustmentReason">Reason for Adjustment</label>
                        <input type="text" id="starsAdjustmentReason" name="adjustmentReason" placeholder="e.g., Bonus for excellent work" required>
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Adjust Stars</button>
                    </div>
                </form>
            </div>

            <div id="lessons" class="tab-content">
                <form action="/dashboard/user-profile/<%= userProfile._id %>/adjust-lessons" method="POST" class="adjustment-form">
                    <div class="form-group">
                        <label for="lessonsAdjustment">Paid Lessons Adjustment</label>
                        <input type="number" id="lessonsAdjustment" name="lessonsAdjustment" placeholder="e.g., 8 or -1" required>
                    </div>
                    <div class="form-group reason-group">
                        <label for="lessonsAdjustmentReason">Reason for Adjustment</label>
                        <input type="text" id="lessonsAdjustmentReason" name="adjustmentReason" placeholder="e.g., Payment received" required>
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Adjust Lessons</button>
                    </div>
                </form>
            </div>
        </div>
    <% } %>

    <div class="card">
        <h2>Lesson History</h2>
        <div class="table-responsive">
            <table class="data-table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th><%= userProfile.role === 'student' ? 'Teacher' : 'Student' %></th>
                        <th>Topic</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (lessons && lessons.length > 0) { %>
                        <% lessons.forEach(lesson => { %>
                            <tr data-lesson-id="<%= lesson._id %>">
                                <td><%= new Date(lesson.localLessonDate).toLocaleString('en-GB', { day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit' }) %></td>
                                <td>
                                    <% if (userProfile.role === 'student') { %>
                                        <% if (lesson.teacher) { %>
                                            <a href="/dashboard/user-profile/<%= lesson.teacher._id %>" class="link-discreet"><%= lesson.teacher.name %></a>
                                        <% } else { %>
                                            N/A
                                        <% } %>
                                    <% } else { %>
                                        <% if (lesson.student) { %>
                                            <a href="/dashboard/user-profile/<%= lesson.student._id %>" class="link-discreet"><%= lesson.student.name %></a>
                                        <% } else { %>
                                            N/A
                                        <% } %>
                                    <% } %>
                                </td>
                                <td><%= lesson.topic %></td>
                                <td class="status-cell" data-lesson-id="<%= lesson._id %>" data-current-status="<%= lesson.status %>">
                                    <span class="badge lesson-<%= lesson.status %>"><%= lesson.status.replace(/_/g, ' ').toUpperCase() %></span>
                                </td>
                                <td class="actions-cell">
                                    <button class="btn-icon delete-lesson-btn" data-id="<%= lesson._id %>" data-tooltip="Delete"><i class="icon-delete"></i></button>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr><td colspan="5" style="text-align: center; padding: 20px;">No lesson history found.</td></tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
    
    <% if (userProfile.balanceHistory && userProfile.balanceHistory.length > 0) { %>
        <div class="card">
            <h2>Balance History</h2>
            <div class="table-responsive">
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Details</th>
                            <th>Change</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% userProfile.balanceHistory.slice().reverse().forEach(entry => { %>
                            <tr>
                                <td><%= new Date(entry.date).toLocaleString('en-GB') %></td>
                                <td>
                                    <%= entry.reason %>
                                    <% if (entry.amountPaid) { %>
                                        <br>
                                        <small>
                                            Amount: <strong><%= entry.amountPaid.toFixed(2) %> <%= entry.currency %></strong> | 
                                            Tariff: <%= entry.transactionType %>
                                        </small>
                                    <% } %>
                                </td>
                                <td>
                                    <span class="badge <%= entry.change > 0 ? 'status-completed' : 'status-cancelled_by_teacher' %>">
                                        <%= entry.change > 0 ? '+' : '' %><%= entry.change %>
                                    </span>
                                </td>
                                <td class="actions-cell">
                                    <form action="/dashboard/users/balance/delete/<%= entry._id %>?userId=<%= userProfile._id %>" method="POST" style="display:inline;">
                                        <button type="submit" class="btn-icon" data-tooltip="Delete" onclick="return confirm('Are you sure you want to delete this entry?');"><i class="icon-delete"></i></button>
                                    </form>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
        <% } %>
</div>

<script src="/js/user_profile.js" defer></script>

<!-- Lesson Status Modal -->
<div class="status-modal" id="lessonStatusModal">
    <div class="status-modal-content">
        <div class="status-modal-header">
            <h3 class="status-modal-title">Change Lesson Status</h3>
            <button class="status-modal-close" onclick="closeLessonStatusModal()">&times;</button>
        </div>
        <div class="status-modal-body">
            <div class="form-group">
                <label for="lessonStatusSelect">Select Status:</label>
                <select class="status-select" id="lessonStatusSelect">
                    <option value="scheduled">Scheduled</option>
                    <option value="in-progress">In Progress</option>
                    <option value="completed">Completed</option>
                    <option value="cancelled">Cancelled</option>
                    <option value="cancelled_by_student">Cancelled (Student)</option>
                    <option value="cancelled_by_teacher">Cancelled (Teacher)</option>
                    <option value="no_show">No Show</option>
                </select>
            </div>
        </div>
        <div class="status-modal-footer">
            <button type="button" class="btn btn-secondary" onclick="closeLessonStatusModal()">Cancel</button>
            <button type="button" class="btn btn-primary" onclick="updateLessonStatus()">Update</button>
        </div>
    </div>
</div>

<script>
    let currentLessonId = null;
    let isLessonModalOpen = false;

    document.addEventListener('DOMContentLoaded', function() {
        // Find adjustment card by checking h2 text content
        const adjustmentCard = Array.from(document.querySelectorAll('.card')).find(card => {
            const h2 = card.querySelector('h2');
            return h2 && h2.textContent.includes('Adjust Balance');
        });
        
        if (adjustmentCard) {
            adjustmentCard.style.display = 'none';
        }

        const adjustBalanceBtn = document.getElementById('adjust-balance-btn');
        if (adjustBalanceBtn) {
            adjustBalanceBtn.addEventListener('click', function(e) {
                e.preventDefault();
                if (adjustmentCard) {
                    adjustmentCard.style.display = adjustmentCard.style.display === 'none' ? 'block' : 'none';
                }
            });
        }

        // Tab functionality
        const tabs = document.querySelectorAll('.tab-link');
        const tabContents = document.querySelectorAll('.tab-content');

        tabs.forEach(tab => {
            tab.addEventListener('click', function(e) {
                e.preventDefault();
                const targetId = this.dataset.tab;
                const targetContent = document.getElementById(targetId);

                // Remove active class from all tabs and contents
                tabs.forEach(t => t.classList.remove('active'));
                tabContents.forEach(content => content.classList.remove('active'));

                // Add active class to clicked tab and corresponding content
                this.classList.add('active');
                if (targetContent) {
                    targetContent.classList.add('active');
                }
            });
        });

        // Add click handlers for status cells
        const statusCells = document.querySelectorAll('.status-cell');
        statusCells.forEach(cell => {
            cell.addEventListener('click', function() {
                const lessonId = this.dataset.lessonId;
                const currentStatus = this.dataset.currentStatus;
                openLessonStatusModal(lessonId, currentStatus);
            });
        });
    });

    function openLessonStatusModal(lessonId, currentStatus) {
        if (isLessonModalOpen) return;
        
        currentLessonId = lessonId;
        const statusSelect = document.getElementById('lessonStatusSelect');
        if (statusSelect) {
            statusSelect.value = currentStatus;
        }
        
        const modal = document.getElementById('lessonStatusModal');
        if (!modal) {
            console.error('Lesson status modal not found');
            return;
        }
        
        modal.style.display = 'block';
        modal.classList.add('show');
        isLessonModalOpen = true;
        
        // Close on backdrop click
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeLessonStatusModal();
            }
        });
    }

    function closeLessonStatusModal() {
        if (!isLessonModalOpen) return;
        
        const modal = document.getElementById('lessonStatusModal');
        if (modal) {
            modal.classList.remove('show');
            setTimeout(() => {
                modal.style.display = 'none';
            }, 300);
        }
        
        isLessonModalOpen = false;
        currentLessonId = null;
    }

    function updateLessonStatus() {
        if (!currentLessonId) {
            alert('No lesson selected');
            return;
        }
        
        const statusSelect = document.getElementById('lessonStatusSelect');
        if (!statusSelect) {
            alert('Status select not found');
            return;
        }
        
        const newStatus = statusSelect.value;
        if (!newStatus) {
            alert('Please select a status');
            return;
        }
        
        // Show loading state
        const updateBtn = document.querySelector('#lessonStatusModal .btn-primary');
        const originalText = updateBtn.textContent;
        updateBtn.textContent = 'Updating...';
        updateBtn.disabled = true;
        
        fetch(`/dashboard/lessons/${currentLessonId}/status`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ status: newStatus })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                closeLessonStatusModal();
                location.reload();
            } else {
                throw new Error(data.message || 'Unknown error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error updating status: ' + error.message);
        })
        .finally(() => {
            updateBtn.textContent = originalText;
            updateBtn.disabled = false;
        });
    }

    // Close modal with Escape key
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && isLessonModalOpen) {
            closeLessonStatusModal();
        }
    });
</script>