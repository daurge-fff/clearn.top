<div class="container">
    <div class="page-header">
        <h1>Payment Management</h1>
        <div class="page-actions">
            <a href="/api/payments/export?<%= new URLSearchParams(query).toString() %>" class="btn btn-secondary"><i class="icon-export"></i> Export to CSV</a>
        </div>
    </div>
    <div class="card filter-card">
        <form action="/dashboard/payments" method="GET" class="filter-form">
            <div class="filter-group main-search">
                <label for="search-input">Search</label>
                <div class="input-with-icon">
                    <i class="icon-search"></i>
                    <input type="text" id="search-input" name="search" placeholder="By user, identifier, amount..." value="<%= query.search || '' %>">
                </div>
            </div>

            <button type="button" id="mobile-filter-toggle" class="btn btn-secondary mobile-only">
                <i class="icon-filter"></i>
                <span>Filters</span>
            </button>
            
            <div class="collapsible-filters">
                <div class="filter-group">
                    <label for="status">Status</label>
                    <select name="status" id="status">
                        <option value="">All Statuses</option>
                        <option value="completed" <%= (query.status === 'completed') ? 'selected' : '' %>>Completed</option>
                        <option value="manual_review" <%= (query.status === 'manual_review') ? 'selected' : '' %>>Manual Review</option>
                        <option value="pending" <%= (query.status === 'pending') ? 'selected' : '' %>>Pending</option>
                        <option value="failed" <%= (query.status === 'failed') ? 'selected' : '' %>>Failed</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="user">User</label>
                    <select name="user" id="user">
                        <option value="">All Users</option>
                        <% if (typeof allUsers !== 'undefined' && allUsers) { %>
                            <% allUsers.forEach(u => { %>
                                <option value="<%= u._id %>" <%= (query.user == u._id) ? 'selected' : '' %>><%= u.name %></option>
                            <% }); %>
                        <% } %>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="period">Period</label>
                    <select name="period" id="period">
                        <option value="" <%= (!query.period) ? 'selected' : '' %>>All Time</option>
                        <option value="today" <%= (query.period === 'today') ? 'selected' : '' %>>Today</option>
                        <option value="week" <%= (query.period === 'week') ? 'selected' : '' %>>This Week</option>
                        <option value="month" <%= (query.period === 'month') ? 'selected' : '' %>>This Month</option>
                        <option value="quarter" <%= (query.period === 'quarter') ? 'selected' : '' %>>This Quarter</option>
                        <option value="year" <%= (query.period === 'year') ? 'selected' : '' %>>This Year</option>
                        <option value="custom" <%= (query.period === 'custom') ? 'selected' : '' %>>Custom Range</option>
                    </select>
                </div>
                <div class="filter-group custom-date-range" style="<%= (query.period !== 'custom') ? 'display: none;' : '' %>">
                    <label for="dateFrom">From</label>
                    <div class="input-with-icon">
                        <i class="icon-calendar"></i>
                        <input type="date" name="dateFrom" id="dateFrom" value="<%= query.dateFrom || '' %>">
                    </div>
                </div>
                <div class="filter-group custom-date-range" style="<%= (query.period !== 'custom') ? 'display: none;' : '' %>">
                    <label for="dateTo">To</label>
                    <div class="input-with-icon">
                        <i class="icon-calendar"></i>
                        <input type="date" name="dateTo" id="dateTo" value="<%= query.dateTo || '' %>">
                    </div>
                </div>
                <div class="filter-group">
                    <label>Amount Range</label>
                    <div class="amount-range">
                        <input type="number" name="amountMin" id="amountMin" placeholder="Min" step="0.01" value="<%= query.amountMin || '' %>">
                        <input type="number" name="amountMax" id="amountMax" placeholder="Max" step="0.01" value="<%= query.amountMax || '' %>">
                    </div>
                </div>
                <div class="filter-actions">
                    <button type="submit" class="btn btn-primary">Apply</button>
                    <a href="/dashboard/payments" class="btn btn-secondary">Clear</a>
                </div>
            </div>
        </form>
    </div>

    <div class="card">
        <div class="table-responsive">
            <table class="data-table">
                <thead>
                    <%
                        const sortableLink = (field, text) => {
                            const isCurrentSort = query.sort === field;
                            const order = isCurrentSort && query.order === 'asc' ? 'desc' : 'asc';
                            const icon = isCurrentSort ? (query.order === 'asc' ? '▲' : '▼') : '';
                            const params = new URLSearchParams(query);
                            params.set('sort', field);
                            params.set('order', order);
                            return `<a href="?${params.toString()}">${text} ${icon}</a>`;
                        };
                    %>
                    <tr>
                        <th><%- sortableLink('createdAt', 'Date') %></th>
                        <th><%- sortableLink('pendingIdentifier', 'Client ID') %></th>
                        <th><%- sortableLink('userId.name', 'User') %></th>
                        <th><%- sortableLink('amountPaid', 'Amount') %></th>
                        <th><%- sortableLink('currency', 'Currency') %></th>
                        <th><%- sortableLink('status', 'Status') %></th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (payments && payments.length > 0) { %>
                        <% payments.forEach(payment => { %>
                            <tr data-payment-id="<%= payment._id %>">
                                <td><%= new Date(payment.createdAt).toLocaleString('en-GB') %></td>
                                <td><code><%= payment.pendingIdentifier %></code></td>
                                <td>
                                    <% if (payment.userId) { %>
                                        <a href="/dashboard/user-profile/<%= payment.userId._id %>" class="link-discreet"><%= payment.userId.name %></a>
                                    <% } else { %>
                                        <button class="btn btn-secondary link-payment-btn" data-payment-id="<%= payment._id %>" data-identifier="<%= payment.pendingIdentifier %>">
                                            Link User
                                        </button>
                                    <% } %>
                                </td>
                                <td><strong><%= payment.amountPaid.toFixed(2) %></strong></td>
                                <td><span class="badge role-student"><%= payment.currency %></span></td>
                                
                                <td class="status-cell" data-payment-id="<%= payment._id %>" data-current-status="<%= payment.status %>">
                                    <span class="badge status-<%= payment.status.replace(/ /g, '_') %> current-status-badge">
                                        <%= payment.status.replace('_', ' ') %>
                                    </span>
                                    <div class="status-dropdown">
                                        <% if (payment.status === 'manual_review' || payment.status === 'pending') { %>
                                            <div class="status-dropdown-item" data-status="completed">Approve (Completed)</div>
                                            <div class="status-dropdown-item" data-status="failed">Decline (Failed)</div>
                                        <% } else { %>
                                            <div class="status-dropdown-item" data-status="<%= payment.status %>">No actions available</div>
                                        <% } %>
                                    </div>
                                </td>

                                <td class="actions-cell">
                                    <button class="btn-icon btn-danger delete-payment-btn" data-id="<%= payment._id %>" data-tooltip="Delete Record">
                                        <i class="icon-delete"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="6">
                                <div class="empty-state">
                                    <h3>No Payments Found</h3>
                                    <p>No payments match your current filters.</p>
                                </div>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const periodSelect = document.getElementById('period');
    const customDateRanges = document.querySelectorAll('.custom-date-range');
    const mobileFilterToggle = document.getElementById('mobile-filter-toggle');
    const collapsibleFilters = document.querySelector('.collapsible-filters');
    
    // Toggle custom date range visibility
    function toggleCustomDateRange() {
        const isCustom = periodSelect.value === 'custom';
        customDateRanges.forEach(range => {
            range.style.display = isCustom ? 'block' : 'none';
        });
    }
    
    periodSelect.addEventListener('change', toggleCustomDateRange);
    
    // Mobile filter toggle
    if (mobileFilterToggle && collapsibleFilters) {
        mobileFilterToggle.addEventListener('click', function() {
            collapsibleFilters.classList.toggle('show');
        });
    }
    
    // Auto-submit on quick period selection
    periodSelect.addEventListener('change', function() {
        if (this.value !== 'custom' && this.value !== '') {
            // Auto-submit for predefined periods
            setTimeout(() => {
                this.closest('form').submit();
            }, 100);
        }
    });
});
</script>